Help on module api:

NAME
    api - CircleCI API Module

DESCRIPTION
    :copyright: (c) 2017 by Lev Lazinskiy
    :license: MIT, see LICENSE for more details.

CLASSES
    builtins.object
        Api
    
    class Api(builtins.object)
     |  A python interface into the CircleCI API
     |  
     |  Methods defined here:
     |  
     |  __init__(self, token, url='https://circleci.com/api/v1.1')
     |      Instantiate a new circleci.Api object.
     |      
     |      Args:
     |          url (str):
     |              The URL to the CircleCI instance
     |              defaults to https://circleci.com/api/v1.1
     |      
     |              If you are running CircleCI server, the API
     |              is available at the same endpoint of your own
     |              installation url. i.e (https://circleci.yourcompany.com/api/v1.1)
     |      
     |          token (str):
     |              Your CircleCI token.abs
     |  
     |  add_ssh_key(self, username, project, ssh_key, vcs_type='github', hostname=None)
     |      Create an ssh key
     |      
     |      Used to access external systems that require SSH key-based authentication.
     |      
     |      Params:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          branch (str):
     |              defaults to master
     |          ssh_key(str):
     |              private rsa key
     |      
     |              note: this must be unencrypted
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |          hostname (str):
     |              optional hostname, if set the key
     |              will only work for this hostname.
     |      
     |      Endpoint:
     |          POST: /project/:vcs-type/:username/:project/ssh-key
     |  
     |  add_ssh_user(self, username, project, build_num, vcs_type='github')
     |      Adds a user to the build's SSH permissions.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          build_num (str):
     |              build number
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          POST: /project/:vcs-type/:username/:project/:build_num/ssh-users
     |  
     |  cancel_build(self, username, project, build_num, vcs_type='github')
     |      Cancels the build.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          build_num (str):
     |              build number
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          POST: /project/:vcs-type/:username/:project/:build_num/cancel
     |  
     |  clear_cache(self, username, project, vcs_type='github')
     |      Clear cache for a project
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          DELETE: /project/:vcs-type/:username/:project/build-cache
     |  
     |  create_checkout_key(self, username, project, key_type, vcs_type='github')
     |      Create a new checkout keys for a project
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          key_type (str):
     |              The type of key to create
     |      
     |              Can be 'deploy-key' or 'github-user-key'
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          POST: /project/:vcs-type/:username/:project/checkout-key
     |  
     |  delete_checkout_key(self, username, project, fingerprint, vcs_type='github')
     |      Delete a checkout key.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          fingerprint (str):
     |              The fingerprint of the checkout key
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          DELETE: /project/:vcs-type/:username/:project/checkout-key/:fingerprint
     |  
     |  follow_project(self, username, project, vcs_type='github')
     |      Follow a new project on CircleCI.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          POST: /project/:vcs-type/:username/:project/follow
     |  
     |  get_artifacts(self, username, project, build_num, vcs_type='github')
     |      List the artifacts produced by a given build.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          build_num (str):
     |              build number
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          GET: /project/:vcs-type/:username/:project/:build_num/artifacts
     |  
     |  get_build_info(self, username, project, build_num, vcs_type='github')
     |      Full details for a single build.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          build_num (str):
     |              build number
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          GET: /project/:vcs-type/:username/:project/:build_num
     |  
     |  get_checkout_key(self, username, project, fingerprint, vcs_type='github')
     |      Get a checkout key.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          fingerprint (str):
     |              The fingerprint of the checkout key
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          GET: /project/:vcs-type/:username/:project/checkout-key/:fingerprint
     |  
     |  get_project_build_summary(self, username, project, vcs_type='github')
     |      Build summary for each of the last 30 builds for a single git repo.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          GET: /project/:vcs-type/:username/:project
     |  
     |  get_projects(self)
     |      List of all the projects you're following on CircleCI.
     |      
     |      Endpoint:
     |          GET: /projects
     |  
     |  get_recent_builds(self)
     |      Build summary for each of the last 30 recent builds, ordered by build_num.
     |      
     |      Endpoint:
     |          GET: /recent-builds
     |  
     |  get_user_info(self)
     |      Provides information about the signed in user.
     |      
     |      Endpoint:
     |          GET: /me
     |  
     |  list_checkout_keys(self, username, project, vcs_type='github')
     |      List checkout keys for a project
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          GET: /project/:vcs-type/:username/:project/checkout-key
     |  
     |  retry_build(self, username, project, build_num, vcs_type='github')
     |      Retries the build.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          build_num (str):
     |              build number
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |      
     |      Endpoint:
     |          POST: /project/:vcs-type/:username/:project/:build_num/retry
     |  
     |  trigger_build(self, username, project, branch='master', vcs_type='github', params=None)
     |      Triggers a new build.
     |      
     |      Args:
     |          username (str):
     |              org or user name
     |          project (str):
     |              case sensitive repo name
     |          branch (str):
     |              defaults to master
     |          vcs_type (str):
     |              defaults to github
     |              on circleci.com you can also pass in bitbucket
     |          params (dict):
     |              optional build parameters
     |              https://circleci.com/docs/1.0/parameterized-builds/
     |      
     |      Endpoint:
     |          POST: /project/:vcs-type/:username/:project/tree/:branch
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FILE
    /Users/levlaz/git/circleci.py/circleci/api.py


